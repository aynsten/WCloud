<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WCloud.Identity</name>
    </assembly>
    <members>
        <member name="T:WCloud.Identity.Controllers.CacheManageController">
            <summary>
            管理缓存
            </summary>
        </member>
        <member name="M:WCloud.Identity.Controllers.CacheManageController.Query">
            <summary>
            获取缓存key
            </summary>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.Controllers.CacheManageController.RemoveCacheKey(System.String)">
            <summary>
            清空缓存
            </summary>
            <param name="m">缓存key管理方法名，除此以外还有动态参数</param>
            <returns></returns>
        </member>
        <member name="T:WCloud.Identity.MemberShipControllers.CommonController">
            <summary>
            公用组件
            </summary>
        </member>
        <member name="T:WCloud.Identity.MemberShipControllers.OrgController">
            <summary>
            组织
            以github为例，epc就是github，途虎在github中就等同于epc的客户。
            途虎就是组织，组织下面是成员（这里的成员就是点检人员/保安）
            </summary>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.AllMembers">
            <summary>
            组织成员分页
            </summary>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.Query(System.String,System.Nullable{System.Int32})">
            <summary>
            查询组织
            </summary>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.Save(System.String)">
            <summary>
            添加或者更新组织
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.Delete(System.String)">
            <summary>
            删除组织
            </summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.MyOrg">
            <summary>
            我加入的组织
            </summary>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.SelectOrgAction(System.String)">
            <summary>
            设置默认org
            </summary>
            <param name="org_uid"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.QueryMemberRoles">
            <summary>
            获取所有角色和响应的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.AddMember(System.String,System.Nullable{System.Int32})">
            <summary>
            添加成员
            </summary>
            <param name="org_uid"></param>
            <param name="user_uid"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.OrgController.RemoveMember(System.String)">
            <summary>
            移除成员
            </summary>
            <param name="org_uid"></param>
            <param name="user_uid"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.PermissionController.Query">
            <summary>
            查询权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.PermissionController.Delete(System.String)">
            <summary>
            删除权限
            </summary>
            <param name="uid">权限uid</param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.PermissionController.Save(System.String)">
            <summary>
            添加权限
            </summary>
            <param name="data">权限的json数据</param>
            <returns></returns>
        </member>
        <member name="T:WCloud.Identity.MemberShipControllers.RoleController">
            <summary>
            角色
            </summary>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.RoleController.Query">
            <summary>
            显示角色树菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.RoleController.Delete(System.String)">
            <summary>
            删除角色
            </summary>
            <param name="uid"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.RoleController.Save(System.String)">
            <summary>
            添加角色
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.RoleController.SetUserRole(System.String,System.String)">
            <summary>
            给用户设置角色
            </summary>
            <param name="user_uid"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.RoleController.SetRolePermission(System.String,System.String)">
            <summary>
            给角色设置权限
            </summary>
            <param name="role_uid"></param>
            <param name="permission"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.UserController.Query(System.String,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            用户列表
            </summary>
            <param name="name"></param>
            <param name="email"></param>
            <param name="q"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.UserController.UserSuggest(System.String)">
            <summary>
            搜索建议
            </summary>
            <param name="q"></param>
            <returns></returns>
        </member>
        <member name="T:WCloud.Identity.MemberShipControllers.AccountController">
            <summary>
            This sample controller implements a typical login/logout/provision workflow for local and external accounts.
            The login service encapsulates the interactions with the user data store. This data store is in-memory only and cannot be used for production!
            The interaction service provides a way for the UI to communicate with identityserver for validation and context retrieval
            </summary>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.AccountController.LoginViaPass(System.String,System.String)">
            <summary>
            密码登陆
            </summary>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.AccountController.LogOutAction">
            <summary>
            退出登陆
            </summary>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.AccountController.Logout(System.String)">
            <summary>
            退出登陆
            </summary>
            <param name="returnUrl">会跳地址</param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.AccountController.GetLoginUserInfo">
            <summary>
            获取用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.AccountController.Reg(System.String)">
            <summary>
            注册用户
            </summary>
            <param name="data">用户的json数据</param>
            <returns></returns>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.AccountController.Login(System.String)">
            <summary>
            Entry point into the login workflow
            </summary>
        </member>
        <member name="M:WCloud.Identity.MemberShipControllers.AccountController.Login(IdentityServer4.Quickstart.UI.LoginInputModel,System.String)">
            <summary>
            Handle postback from username/password login
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.ExternalController.Challenge(System.String,System.String)">
            <summary>
            initiate roundtrip to external authentication provider
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.ExternalController.Callback">
            <summary>
            Post processing of external authentication
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.ExternalController.AutoProvisionUser(System.String,System.String,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
            <summary>
            自动创建用户
            </summary>
            <param name="provider"></param>
            <param name="providerUserId"></param>
            <param name="claims"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityServer4.Quickstart.UI.ConsentController">
            <summary>
            This controller processes the consent UI
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.ConsentController.Index(System.String)">
            <summary>
            Shows the consent screen
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.ConsentController.Index(IdentityServer4.Quickstart.UI.ConsentInputModel)">
            <summary>
            Handles the consent screen postback
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.Extensions.IsPkceClientAsync(IdentityServer4.Stores.IClientStore,System.String)">
            <summary>
            Determines whether the client is configured to use PKCE.
            </summary>
            <param name="store">The store.</param>
            <param name="client_id">The client identifier.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityServer4.Quickstart.UI.GrantsController">
            <summary>
            This sample controller allows a user to revoke grants given to clients
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.GrantsController.Index">
            <summary>
            Show list of grants
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.GrantsController.Revoke(System.String)">
            <summary>
            Handle postback to revoke a client
            </summary>
        </member>
        <member name="M:IdentityServer4.Quickstart.UI.HomeController.Error(System.String)">
            <summary>
            Shows the error page
            </summary>
        </member>
    </members>
</doc>
